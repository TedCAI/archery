.content.container
  h2 用户详情
  - if current_user.id != @user.id
    .form-group
      label 用户名：
      '
      = @user.name
    .form-group
      label 初始积分：
      '
      = @user.initial_score
    .form-group
      label 当前总积分：
      '
      = @user.total_score
  - else
    = form_for @user, url: user_path, method: :patch, html: { id: 'user', class: 'user' } do |f|
      .form-group
        label 用户名：
        '
        = text_field_tag :name, @user.name, required: true, class: "form-control"
      .form-group
        label 初始积分：
        '
        = text_field_tag :initial_score, @user.initial_score, required: true, class: "form-control"
      .form-group
        label 当前总积分：
        '
        = text_field_tag :initial_score, @user.total_score, disabled: true, class: "form-control"
      .form-group
        button.btn.btn-primary = "保存"

    .form-group
      = button_to "添加新的积分详情", new_record_user_path, class: "create_new_record_link btn btn-primary", method: :get

  /input.hidden.score_list_array value=@score_list_array style="display: none;"
  input.hidden.user_id value=@user.id style="display: none;"

  /h3 积分趋势图

  .card
    .card-header role="tab" id="score_time_line"
      h4.mb-0
        a.collapsed data-toggle="collapse" href="#collapse_score_time_line" aria-expanded="true" aria-controls="collapse_score_time_line"
          | 积分趋势图
      .collapse id="collapse_score_time_line" role="tabpanel" aria-labelledby="#score_time_line" data-parent="#accordion"
        .card-body.svg_body style="overflow: scroll;"
          svg.chart width="600" height="300"

  h3 积分详情


  - @membership_records.order(record_time: :desc).group_by(&:year_and_month).each do |key, records|
      /h4 = key
      - upper_layer_headding_attr = "upper_heading-#{key}"
      - upper_layer_headding_attr_ = "##{upper_layer_headding_attr}"
      - upper_layer_attr = "collapse-#{key}"
      - upper_layer_attr_ = "##{upper_layer_attr}"

      .card
        .card-header role="tab" id=upper_layer_headding_attr
          h4.mb-0
            a.collapsed data-toggle="collapse" href=upper_layer_attr_ aria-expanded="true" aria-controls=upper_layer_attr
              = key
        .collapse id=upper_layer_attr role="tabpanel" aria-labelledby=upper_layer_headding_attr_ data-parent="#accordion"
          .card-body

            - records.each do |record|
              - headding_attr = "heading-#{record.id}"
              - headding_arrt_ = "##{headding_attr}"
              - attr = "collapse-#{record.id}"
              - attr_ = "##{attr}"
              .card
                .card-header role="tab" id=headding_attr
                  h5.mb-0
                    a.collapsed data-toggle="collapse" href=attr_ aria-expanded="true" aria-controls=attr
                      = record.record_time&.in_time_zone('Beijing')&.strftime("%Y-%m-%d")
                    - if current_user&.id == @user.id
                      '
                      = link_to "修改记录", edit_record_user_path(id: @user.id, record_id: record.id), method: :get, class: "badge badge-primary float-right"
                  /span.float-left = record.record_time&.in_time_zone('Beijing')&.strftime("%Y-%m-%d")

                .collapse id=attr role="tabpanel" aria-labelledby=headding_arrt_ data-parent="#accordion"
                  .card-body
                    table.score.table.table-striped
                      tbody
                        - record.membership_score_policies.each do |policy|
                          tr
                            td = policy.name
                            td = policy.score

                        tr
                          td 总计
                          td = record.membership_score_policies.map(&:score).sum
                        tr
                          td 当前积分
                          td = @score_list[record.id]


javascript:
    var user_id = $(".user_id").val()
    $.ajax({
        type: "GET",
        contentType: "application/json; charset=utf-8",
        url: '/users/' + user_id,
        dataType: 'json',
        success: function (data) {
            console.log(data);
            draw_chart(data.score_list);
        },
        error: function (result) {
            error();
        }
    });

    function error() {
        console.log("error")
    }

    var draw_chart = function(data){
        var margin = {top: 20, right: 50, bottom: 30, left: 30},
            width = 600 - margin.left - margin.right,
            height = 300 - margin.top - margin.bottom;

        var x = d3.scaleTime()
            .rangeRound([0, width]);

        var y = d3.scaleLinear()
            .rangeRound([height, 0]);
        //.range([height, 0])
        //.domain([d3.min(data), d3.max(data)]);

        var chart = d3.select("svg");

        var line = d3.line()
            .x(function (d) {
                return x(d.date);
            })
            .y(function (d) {
                return y(d.score);
            });

        var parseTime = function(date){
            date_arr = date.split('-');
            return new Date(date_arr[0], date_arr[1], date_arr[2]);
        };

        var g = chart.append("g")
            .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

        var formated_data = d3.tsvParse(data, function(d){
            d.date = parseTime(d.date);
            d.score = +d.score;
            return d;
        });

        console.log(formated_data)

        x.domain(d3.extent(formated_data, function (d) {
            return d.date;
        }));
        y.domain(d3.extent(formated_data, function (d) {
            return d.score;
        }));

        g.append("g")
            .attr("transform", "translate(0," + height + ")")
            .call(d3.axisBottom(x))
            .select(".domain")
            .remove();

        g.append("g")
            .call(d3.axisLeft(y))
            .append("text")
            .attr("fill", "#000")
            .attr("transform", "rotate(-90)")
            .attr("y", 6)
            .attr("dy", "0.71em")
            .attr("text-anchor", "end")
            .text("积分");

        g.append("g")
            .call(d3.axisRight(y))
            .attr("transform", "translate(" + width + ",0)")
            .append("text")
            .attr("fill", "#000")
            .attr("transform", "rotate(-90)")
            .attr("y", 6)
            .attr("dy", "0.71em")
            .attr("text-anchor", "end")
            .text("积分");

        g.append("path")
            .datum(formated_data)
            .attr("fill", "none")
            .attr("stroke", "steelblue")
            .attr("stroke-linejoin", "round")
            .attr("stroke-linecap", "round")
            .attr("stroke-width", 1.5)
            .attr("d", line);

    };
